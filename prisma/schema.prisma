generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Or your database provider
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  photo     String? // URL of user profile photo
  role      String   @default("USER")
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  inventory   Int
  photos      Photo[] // Relation with Photo model
  isDeleted   Boolean   @default(false) // For soft deletion
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Photo {
  id        Int     @id @default(autoincrement())
  url       String // URL of the photo
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id      String @id @default(uuid())
  userId  Int?
  user    User?  @relation(fields: [userId], references: [id])
  email   String
  name    String
  address String

  totalAmount     Float
  shippingMethod  String
  trackingCode    String
  customerId      String
  shippingAddress String
  paymentMethod   String
  totalCost       Float // New field to store total cost
  items           OrderItem[]

  status    String   @default("Pending")
  createdAt DateTime @default(now())
}

model OrderItem {
  id         String  @id @default(uuid())
  productId  String
  orderId    String
  quantity   Int
  price      Float
  order      Order   @relation(fields: [orderId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt  // Track updates for audit purposes
}


model ShippingMethod {
  id           Int    @id @default(autoincrement())
  name         String
  price        Float
  deliveryTime String
}
